scalar Time

type User {
  userID: ID!
  username: String!
  email: String!
  role: String!
  createdAt: Time!
  updatedAt: Time!
}

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  role: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Query {
  fetchUsers: [User!]!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  login(input: LoginInput!): AuthPayload!
  logout: Boolean!
}